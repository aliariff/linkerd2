#
# This file is a mostly a concatenation of `kind_integration.yml` and
# `cloud_integration.yml`, specifically for release.

name: Release
on:
  push:
    branches:
      - "test-arm"
env:
  GH_ANNOTATION: true
  DOCKER_BUILDKIT: 1
jobs:
  arm64_integration_tests:
    name: ARM64 integration tests
    runs-on: ubuntu-18.04
    needs: [docker_build]
    steps:
    - name: Checkout code
      # actions/checkout@v2
      uses: actions/checkout@722adc6
    - name: Try to load cached Go modules
      # actions/cache@v1.1.2
      uses: actions/cache@70655ec
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Install linkerd CLI
      id: install_cli
      run: |
        TAG="$(CI_FORCE_CLEAN=1 bin/root-tag)"
        CMD="$PWD/target/release/linkerd2-cli-$TAG-linux-amd64"
        bin/docker-pull-binaries $TAG
        $CMD version --client
        # validate CLI version matches the repo
        [[ "$TAG" == "$($CMD version --short --client)" ]]
        echo "Installed Linkerd CLI version: $TAG"
        echo "::set-env name=CMD::$CMD"
        echo "::set-output name=tag::$TAG"
    - name: Set KUBECONFIG environment variables
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.ARM64_KUBECONFIG }}" > $HOME/.kube/config
        echo ::set-env name=KUBECONFIG::$HOME/.kube/config
        kubectl cluster-info
    - name: Run integration tests
      env:
        ARM_TEST: 1
      run: bin/tests --skip-kind-create "$CMD"
    - name: CNI tests
      run: |
        export TAG="$($CMD version --client --short)"
        go test -cover -race -v -mod=readonly ./cni-plugin/test -integration-tests
    - name: Test cleanup
      if: ${{ always() }}
      run: bin/test-cleanup
